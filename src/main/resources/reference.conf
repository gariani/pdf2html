app {
  webservice {
    akka {
      host = "localhost"
      port = 8080
    }
  }
  database {
    mongoDB {
      uri = "mongodb://localhost:27017"
      databaseName = "pdf2html"
    }
    couchDB {
      host = "localhost"
      port = 5984
      username = "admin"
      password = "admin"
      databaseName = "teste"
    }
  }
  storage {
    minio {
      security = false
      url = "http://localhost"
      port = 9000
      username = "admin"
      password = "admin123"
      bucket = "documentos"
    }
    s3 {
      url = "http://localhost"
      port = 9000
      username = "admin"
      password = "admin123"
      teste = "novo item"
      teste2 = "novo teste 2"
      listaOutraCoisa = "lista1"
      bucket = "documentos"
    }
  }
}
akka {
  actor-system = "pdf2htmlActorSystem"
  loglevel = "DEBUG"
  http {
    client {
      parsing {
        max-content-length = 2048m
      }
    }
    server {
      parsing {
        max-content-length = 2048m
      }
    }
  }
}
op-rabbit {
  my-queue = "my-queue"
  exchange-name = "amq.topic"
  channel-dispatcher = "op-rabbit.default-channel-dispatcher"
  default-channel-dispatcher {
    # Dispatcher is the name of the event-based dispatcher
    type = Dispatcher

    # What kind of ExecutionService to use
    executor = "fork-join-executor"

    # Configuration for the fork join pool
    fork-join-executor {
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 2

      # Parallelism (threads) ... ceil(available processors * factor)
      parallelism-factor = 2.0

      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 4
    }
    # Throughput defines the maximum number of messages to be
    # processed per actor before the thread jumps to the next actor.
    # Set to 1 for as fair as possible.
    throughput = 100
  }
  connection {
    virtual-host = "/"
    hosts = ["127.0.0.1"]
    username = "guest"
    password = "guest"
    port = 5672
    ssl = false
    connection-timeout = 3s
  }
}